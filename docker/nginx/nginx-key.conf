# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

# This is the default Mainflux NGINX configuration.

user nginx;
worker_processes auto;
worker_cpu_affinity auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    # Explanation: https://serverfault.com/questions/787919/optimal-value-for-nginx-worker-connections
    # We'll keep 10k connections per core (assuming one worker per core)
    worker_connections 10000;
}

http {
    include snippets/http_access_log.conf;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Include single-node or multiple-node (cluster) upstream
    include snippets/mqtt-ws-upstream.conf;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        include snippets/ssl.conf;

        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Methods '*';
        add_header Access-Control-Allow-Headers '*';

        server_name localhost;

        # Proxy pass to users service
        location ~ ^/(users|tokens|password) {
            include snippets/proxy-headers.conf;
            proxy_pass http://users:${MF_USERS_HTTP_PORT};
        }
        # location ~ ^/(users|password) {
        #     include snippets/proxy-headers.conf;
        #     proxy_pass http://users:${MF_USERS_HTTP_PORT};
        # }

        # location ~ ^/tokens {
        #      include snippets/proxy-headers.conf;
        #      default_type application/json;
        #      return 200 '{"token":"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJleGhWWWJ2U211V0dIb0NmeG8tVFNIU2s3aUpYZWNLVThQM2N2ajUtY1BnIn0.eyJleHAiOjE2MzU1MzIxMTksImlhdCI6MTYzNTQ5NjExOSwiYXV0aF90aW1lIjoxNjM1NDk2MTE5LCJqdGkiOiJlNDgxNDM0MC05MTMwLTQ3MzItYWZiNS1kOGNiMTFhM2U4OGMiLCJpc3MiOiJodHRwczovL2F1dGguYXNodmluLmV1L2F1dGgvcmVhbG1zL2FzaHZpbiIsImF1ZCI6ImlvdC5hc2h2aW4uZXUiLCJzdWIiOiI4ODA2MjhmYS03MGZhLTRkZDYtYTFkMC03ZjIxNjlmNDU2MTMiLCJ0eXAiOiJJRCIsImF6cCI6ImlvdC5hc2h2aW4uZXUiLCJzZXNzaW9uX3N0YXRlIjoiZDlkNzU2MGUtNzdlNS00NGFjLTk2MGQtOWQ3MWIzOTNmZDkzIiwiYXRfaGFzaCI6Ii1MdVluajROZ2k5WFhKWHFqLVU4b1EiLCJhY3IiOiIxIiwic2lkIjoiZDlkNzU2MGUtNzdlNS00NGFjLTk2MGQtOWQ3MWIzOTNmZDkzIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsIm5hbWUiOiJNaXJrbyAgVGVvZG9yb3ZpYyIsInByZWZlcnJlZF91c2VybmFtZSI6Im1pcmtvLnRlb2Rvcm92aWMiLCJnaXZlbl9uYW1lIjoiTWlya28gIiwiZmFtaWx5X25hbWUiOiJUZW9kb3JvdmljIiwiZW1haWwiOiJtaXJrby50ZW9kb3JvdmljQG1haW5mbHV4LmNvbSJ9.VSMYbmMgFQR0m2Z2zNmIrrYf7omLjhk3jBUHmjUN4FJRyWtXX8jqOfD15DqBQ_zoe0XwWmkeAM9gp7JUAa4YqqqbJC9skI6kRrOce4_MSGWy4zgl1ZEBgNsv4OPIrv1sJjPgzE69UOafnvxYAcY_HQNkuDzDaI3tQ70bsHOHJrTyoRI8nLzRveSCKbKdyp3qGYH43jLyErAokYCRphay-hEHaxOvRcB6vlfmBOAmUNQJ899jaO970THYnBubggSx3iADNJcgmlNZpU_k9gH0Fd6ek9dzcdDyPlF_Gz9CGkOu69NjHx-VpU6KWw4iFDfQydcKVau7OlDUsC1egeJ1pA"}';
        # }

        # location = /users/profile {
        #     include snippets/proxy-headers.conf;
        #     return 200;
        # }

        # Proxy pass to things service
        location ~ ^/(things|channels|connect) {
            include snippets/proxy-headers.conf;
            add_header Access-Control-Expose-Headers Location;
            proxy_pass http://things:${MF_THINGS_HTTP_PORT};
        }

        location ~ ^/(identify){
            include snippets/proxy-headers.conf;
            add_header Access-Control-Expose-Headers Location;
            proxy_pass http://things:${MF_THINGS_AUTH_HTTP_PORT};
        }

        # Proxy pass for groups to things service
        location ^~ /groups/things/ {
            include snippets/proxy-headers.conf;
            add_header Access-Control-Expose-Headers Location;
            proxy_pass http://things:${MF_THINGS_HTTP_PORT}/groups/;
        }

        # Proxy pass for groups to users service
        location ^~ /groups/users/ {
            include snippets/proxy-headers.conf;
            add_header Access-Control-Expose-Headers Location;
            proxy_pass http://users:${MF_USERS_HTTP_PORT}/groups/;
        }

        location ~ ^/(groups|members|keys) {
            include snippets/proxy-headers.conf;
            add_header Access-Control-Expose-Headers Location;
            proxy_pass http://auth:${MF_AUTH_HTTP_PORT};
        }

        location /version {
            include snippets/proxy-headers.conf;
            proxy_pass http://things:${MF_THINGS_HTTP_PORT};
        }

        # Proxy pass to mainflux-http-adapter
        location /http/ {
            include snippets/proxy-headers.conf;

            # Trailing `/` is mandatory. Refer to the http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
            # If the proxy_pass directive is specified with a URI, then when a request is passed to the server,
            # the part of a normalized request URI matching the location is replaced by a URI specified in the directive
            proxy_pass http://http-adapter:${MF_HTTP_ADAPTER_PORT}/;
        }

        # Proxy pass to mainflux-mqtt-adapter over WS
        location /mqtt {
            include snippets/proxy-headers.conf;
            include snippets/ws-upgrade.conf;
            proxy_pass http://mqtt_ws_cluster;
        }

        # Proxy pass to mainflux-influxdb-reader
        location /reader/ {
            include snippets/proxy-headers.conf;
            proxy_pass http://influxdb-reader:${MF_INFLUX_READER_PORT}/;
        }

        # Proxy pass to mainflux-bootstrap
        location /bootstrap/ {
            include snippets/proxy-headers.conf;
            proxy_pass http://bootstrap:${MF_BOOTSTRAP_PORT}/;
        }

        # Proxy pass to mainflux-opcua-adapter
        location /browse {
            include snippets/proxy-headers.conf;
            proxy_pass http://opcua-adapter:${MF_OPCUA_ADAPTER_HTTP_PORT};
        }

        # Proxy pass to mainflux-twins
        location ~ ^/(twins|states) {
            include snippets/proxy-headers.conf;
            proxy_pass http://twins:${MF_TWINS_HTTP_PORT};
        }

        location / {
            include snippets/proxy-headers.conf;
            proxy_pass http://ui:${MF_UI_PORT};
        }
    }
}

# MQTT
stream {
   include snippets/stream_access_log.conf;

    # Include single-node or multiple-node (cluster) upstream
    include snippets/mqtt-upstream.conf;

    server {
        listen 1883;
        listen [::]:1883;
        listen 8883 ssl;
        listen [::]:8883 ssl;

        include snippets/ssl.conf;

        proxy_pass mqtt_cluster;
    }
}

error_log info.log info;
